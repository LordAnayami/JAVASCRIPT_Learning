let simpleArray = ['one', 2, 'three', true, false, undefined, null];
console.log(simpleArray.length);

let complexArray = [
    [
      {
        one: 1,
        two: 2
      },
      {
        three: 3,
        four: 4
      }
    ],
    [
      {
        a: "a",
        b: "b"
      },
      {
        c: "c",
        d: "d"
      }
    ]
  ];

  

  let yourArray = ["Mama", 12, true, "Tata", 15]; // Change this line



  let myArray = ["a", "b", "c", "d"];
  // Only change code below this line
  myArray[1]="be"
  // Only change code above this line
  console.log(myArray);



  function mixedNumbers(arr) {
    // Only change code below this line
    arr.unshift('I', 2, 'three');
    arr.push(7, 'VIII', 9);
    // Only change code above this line
    return arr;
  }
  
  console.log(mixedNumbers(['IV', 5, 'six']));



  function popShift(arr) {
    let popped = arr.pop(); // Change this line
    let shifted = arr.shift(); // Change this line
    return [shifted, popped];
  }
  
  console.log(popShift(['challenge', 'is', 'not', 'complete']));



  const arr = [2, 4, 5, 1, 7, 5, 2, 1];
  // Only change code below this line
  arr.splice(0,4);
  console.log(arr);
  arr.splice(1,1);
  // Only change code above this line
  console.log(arr);



  function htmlColorNames(arr) {
    // Only change code below this line
  arr.splice(0,2,'DarkSalmon', 'BlanchedAlmond')
    // Only change code above this line
    return arr;
  }
  
  console.log(htmlColorNames(['DarkGoldenRod', 'WhiteSmoke', 'LavenderBlush', 'PaleTurquoise', 'FireBrick']));



  function forecast(arr) {
    // Only change code below this line
  var forecast = arr.slice(2,4);
    return forecast;
  }
  
  // Only change code above this line
  console.log(forecast(['cold', 'rainy', 'warm', 'sunny', 'cool', 'thunderstorms']));



  function copyMachine(arr, num) {
    let newArr = [];
    while (num >= 1) {
      // Only change code below this line
       newArr.push([...arr]);
      // Only change code above this line
      num--;
    }
    return newArr;
  }
  
  console.log(copyMachine([true, false, true], 2));



  function spreadOut() {
    let fragment = ['to', 'code'];
    let sentence= ['learning', ...fragment, 'is', 'fun' ]; // Change this line
    return sentence;
  }
  
  console.log(spreadOut());



  function quickCheck(arr, elem) {
    // Only change code below this line
    if (arr.indexOf(elem) !=-1)
    {return true}
    else {return false}
  
    // Only change code above this line
  }
  
  console.log(quickCheck(['squash', 'onions', 'shallots'], 'mushrooms'));



  function greaterThanTen(arr) {
    let newArr = [];
    for (let i = 0; i < arr.length; i++) {
      if (arr[i] > 10) {
        newArr.push(arr[i]);
      }
    }
    return newArr;
  }
  
  greaterThanTen([2, 12, 8, 14, 80, 0, 1]);


  function filteredArray(arr, elem) {
    let newArr = [];
    // Only change code below this line
    for (let i =0; i<arr.length; i++){
      let yes = false;
      for (let j=0; j<arr[i].length;j++)
      {
        if (elem == arr[i][j]){yes=true};
      }
      if (yes == false){newArr.push(arr[i]);}
      yes = false;
    }
    // Only change code above this line
    return newArr;
  }
  
  console.log(filteredArray([[3, 2, 3], [1, 6, 3], [3, 13, 26], [19, 3, 9]], 3));



  let myNestedArray = [
    // Only change code below this line
    'unshift', false, 1, 2, 3, 'complex', 'nested',
    
    ['loop', 'shift', 6, 7, 1000, 'method',
    ['concat', false, true, 'spread', 'array', "deep",
    ['mutate', 1327.98, 'splice', 'slice', 'push', "deeper",
    ['iterate', 1.3849, 7, '8.4876', 'arbitrary', 'depth',"deepest" ]]]]
    // Only change code above this line
  ];




  let foods = {
    apples: 25,
    oranges: 32,
    plums: 28
  };
  
  // Only change code below this line
  foods.bananas=13;
  foods.grapes=35;
  foods.strawberries=27;
  // Only change code above this line
  
  console.log(foods);



  let nestedObject = {
    id: 28802695164,
    date: 'December 31, 2016',
    data: {
      totalUsers: 99,
      online: 80,
      onlineStatus: {
        active: 67,
        away: 13,
        busy: 8
      }
    }
  };




  let userActivity = {
    id: 23894201352,
    date: 'January 1, 2017',
    data: {
      totalUsers: 51,
      online: 42
    }
  };
  
  // Only change code below this line
  userActivity.data.online=45;
  // Only change code above this line
  
  console.log(userActivity);



let foods = {
  apples: 25,
  oranges: 32,
  plums: 28,
  bananas: 13,
  grapes: 35,
  strawberries: 27
};

function checkInventory(scannedItem) {
  // Only change code below this line
  return foods[scannedItem];
  // Only change code above this line
}

console.log(checkInventory("apples"));



let foods = {
    apples: 25,
    oranges: 32,
    plums: 28,
    bananas: 13,
    grapes: 35,
    strawberries: 27
  };
  
  // Only change code below this line
  delete foods.oranges;
  delete foods.plums;
  delete foods.strawberries;
  // Only change code above this line
  
  console.log(foods);



  let users = {
    Alan: {
      age: 27,
      online: true
    },
    Jeff: {
      age: 32,
      online: true
    },
    Sarah: {
      age: 48,
      online: true
    },
    Ryan: {
      age: 19,
      online: true
    }
  };
  
  function isEveryoneHere(userObj) {
    // Only change code below this line
    if ("Alan" in userObj && "Jeff" in userObj && 'Sarah' in userObj && userObj.hasOwnProperty('Ryan')) {return true}
    else{return false;}
  
    // Only change code above this line
  }
  
  console.log(isEveryoneHere(users));



  const users = {
    Alan: {
      online: false
    },
    Jeff: {
      online: true
    },
    Sarah: {
      online: false
    }
  }
  
  function countOnline(allUsers) {
    // Only change code below this line
    let x = 0;
    for (const users in allUsers){
      if (allUsers[users].online == true) {x++}
    }
    return x;
    // Only change code above this line
  }
  
  console.log(countOnline(users));



  let users = {
    Alan: {
      age: 27,
      online: false
    },
    Jeff: {
      age: 32,
      online: true
    },
    Sarah: {
      age: 48,
      online: false
    },
    Ryan: {
      age: 19,
      online: true
    }
  };
  
  function getArrayOfUsers(obj) {
    // Only change code below this line
  return Object.keys(obj);
    // Only change code above this line
  }
  
  console.log(getArrayOfUsers(users));



  let user = {
    name: 'Kenneth',
    age: 28,
    data: {
      username: 'kennethCodesAllDay',
      joinDate: 'March 26, 2016',
      organization: 'freeCodeCamp',
      friends: [
        'Sam',
        'Kira',
        'Tomo'
      ],
      location: {
        city: 'San Francisco',
        state: 'CA',
        country: 'USA'
      }
    }
  };
  
  function addFriend(userObj, friend) {
    // Only change code below this line
    let x = userObj.data.friends;
    x.push(friend);
    userObj.data.friends=x;
    return userObj.data.friends;
    // Only change code above this line
  }
  
  console.log(addFriend(user, 'Pete'));
  userObj.data.friends.push(friend);
  return userObj.data.friends;